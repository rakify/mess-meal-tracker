{"version":3,"sources":["responsive.js","redux/userRedux.js","redux/entryRedux.js","redux/apiCalls.js","components/Topbar.jsx","pages/Login.jsx","components/EntryList.jsx","components/FinalReport.jsx","components/UpdateUser.jsx","pages/Home.jsx","components/EntryForm.jsx","pages/Admin.jsx","pages/Register.jsx","components/ForgotPass.jsx","App.js","redux/store.js","index.js"],"names":["mobile","props","css","userSlice","createSlice","name","initialState","currentUser","isFetching","error","reducers","loginStart","state","loginSuccess","action","payload","loginFailure","updateUserStart","updateUserSuccess","updateUserFailure","getUserStart","getUserSuccess","getUserFailure","actions","entrySlice","entries","getEntriesStart","getEntriesSuccess","getEntriesFailure","deleteEntriesStart","deleteEntriesSuccess","splice","findIndex","item","_id","id","deleteEntriesFailure","updateEntriesStart","updateEntriesSuccess","Entries","updateEntriesFailure","addEntriesStart","addEntriesSuccess","push","addEntriesFailure","axios","defaults","withCredentials","logout","a","get","window","localStorage","clear","location","forgotPass","email","post","res","response","resetPass","password","userId","token","newPw","updateUser","user","dispatch","put","data","updateKey","key","login","register","getUser","username","getEntry","month","year","deleteEntry","delete","admin_key","addEntry","Top","styled","div","padding","Nav","NavLeft","span","NavRight","Logout","Topbar","useDispatch","useSelector","Month","d","Date","getMonth","date","getDate","getFullYear","to","style","textDecoration","color","cursor","onClick","Form","form","Fieldset","fieldset","Legend","legend","Wrapper","flexDirection","Label","label","Input","input","Error","Button","button","ButtonOnLoad","Login","useState","setUsername","setPassword","setError","show","setShow","onSubmit","e","preventDefault","then","request","responseText","type","placeholder","onChange","target","value","minLength","required","disabled","className","backgroundColor","slice","width","margin","fontSize","Container","TABLE","table","CAPTION","caption","TBODY","tbody","TR","tr","TH","th","TD","td","Modal","ModalHeader","ModalBody","ModalFooter","ModalContent","Close","EntryList","monthId","admin","keyResponse","setKeyResponse","confirm","setConfirm","setId","setKey","displayingMonth","length","members","map","i","j","spent","toFixed","reserved","by","meals","totalMeals","pathname","MAINTABLE","Info","FinalReport","info","setInfo","allMeals","allSpent","allReserved","initialMeals","initialReserved","isNaN","mealRate","maxLength","deleteMember","Title","UpdateUser","member","inputs","setInputs","keyResult","setKeyResult","next","setNext","handleChange","prev","handleSubmit","updatedUser","status","borderRadius","requestKey","position","right","textTransform","outline","Menu","Home","p","useParams","useEffect","ForgotClick","InputTitle","Select","select","Left","MyButton","EntryForm","prompt","setPrompt","loading","setLoading","setTotalMeals","setMeals","handleMeals","total","message","display","borderLeft","paddingLeft","flex","justifyContent","alignItems","console","log","Admin","Register","match","Success","ForgotPass","title","setEmail","password2","setPassword2","setRes","toLocaleLowerCase","App","exact","path","element","persistConfig","version","storage","rootReducer","combineReducers","userReducer","entryReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistor","persistStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ddba5b6a.chunk.js","sourcesContent":["import { css } from \"styled-components\";\r\nexport const mobile = (props) => {\r\n  return css`\r\n    @media only screen and (max-width: 500px) {\r\n      ${props}\r\n    }\r\n  `;\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState: {\r\n    currentUser: null,\r\n    isFetching: false,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    loginStart: (state) => {\r\n      state.isFetching = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.currentUser = action.payload;\r\n      state.error = false;\r\n    },\r\n    loginFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    //Update\r\n    updateUserStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    updateUserSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    updateUserFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    //Get\r\n    getUserStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    getUserSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.currentUser = action.payload;\r\n    },\r\n    getUserFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  loginStart,\r\n  loginSuccess,\r\n  loginFailure,\r\n  updateUserStart,\r\n  updateUserSuccess,\r\n  updateUserFailure,\r\n  getUserStart,\r\n  getUserSuccess,\r\n  getUserFailure,\r\n} = userSlice.actions;\r\nexport default userSlice.reducer;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst entrySlice = createSlice({\r\n  name: \"entries\",\r\n  initialState: {\r\n    entries: [],\r\n    isFetching: false,\r\n    error: false,\r\n  },\r\n  reducers: {\r\n    //Get\r\n    getEntriesStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    getEntriesSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.entries = action.payload;\r\n    },\r\n    getEntriesFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    //Delete\r\n    deleteEntriesStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    deleteEntriesSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.entries.splice(\r\n        state.entries.findIndex((item) => item._id === action.payload.id),\r\n        1\r\n      );\r\n    },\r\n    deleteEntriesFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    //Update\r\n    updateEntriesStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    updateEntriesSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.entries[\r\n        state.entries.findIndex((item) => item._id === action.payload.id)\r\n      ] = action.payload.Entries;\r\n    },\r\n    updateEntriesFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n    //Add\r\n    addEntriesStart: (state) => {\r\n      state.isFetching = true;\r\n      state.error = false;\r\n    },\r\n    addEntriesSuccess: (state, action) => {\r\n      state.isFetching = false;\r\n      state.entries.push(action.payload);\r\n    },\r\n    addEntriesFailure: (state) => {\r\n      state.isFetching = false;\r\n      state.error = true;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  getEntriesStart,\r\n  getEntriesSuccess,\r\n  getEntriesFailure,\r\n  deleteEntriesStart,\r\n  deleteEntriesSuccess,\r\n  deleteEntriesFailure,\r\n  updateEntriesStart,\r\n  updateEntriesSuccess,\r\n  updateEntriesFailure,\r\n  addEntriesStart,\r\n  addEntriesSuccess,\r\n  addEntriesFailure,\r\n} = entrySlice.actions;\r\nexport default entrySlice.reducer;","import {\r\n  loginFailure,\r\n  loginStart,\r\n  loginSuccess,\r\n  updateUserStart,\r\n  updateUserSuccess,\r\n  updateUserFailure,\r\n  getUserStart,\r\n  getUserSuccess,\r\n  getUserFailure,\r\n} from \"./userRedux\";\r\nimport {\r\n  getEntriesStart,\r\n  getEntriesSuccess,\r\n  getEntriesFailure,\r\n  deleteEntriesStart,\r\n  deleteEntriesSuccess,\r\n  deleteEntriesFailure,\r\n  updateEntriesStart,\r\n  updateEntriesSuccess,\r\n  updateEntriesFailure,\r\n  addEntriesStart,\r\n  addEntriesSuccess,\r\n  addEntriesFailure,\r\n} from \"./entryRedux\";\r\nimport axios from \"axios\";\r\n\r\naxios.defaults.withCredentials = true; //so its can set automatically the cookie i want\r\n//axios.defaults.baseURL = \"/api/\";\r\n\r\nexport const logout = async () => {\r\n  await axios.get(\"/auth/logout\");\r\n  window.localStorage.clear();\r\n  window.location = \"/login\";\r\n};\r\n\r\nexport const forgotPass = async (email) => {\r\n  try {\r\n    const res = await axios.post(\"/auth/forgot-pass\", { email: email });\r\n    return res;\r\n  } catch (err) {\r\n    return err.response;\r\n  }\r\n};\r\n\r\nexport const resetPass = async (password, userId, token) => {\r\n  try {\r\n    const res = await axios.post(`/auth/reset-pass/${userId}/${token}`, {\r\n      newPw: password,\r\n    });\r\n    return res;\r\n  } catch (err) {\r\n    return err.response;\r\n  }\r\n};\r\n\r\nexport const updateUser = async (id, user, dispatch) => {\r\n  dispatch(updateUserStart());\r\n  try {\r\n    const res = await axios.put(`/auth/${id}`, user);\r\n    dispatch(updateUserSuccess(res.data));\r\n    return res;\r\n  } catch (err) {\r\n    dispatch(updateUserFailure(err.response.data));\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const updateKey = async (id) => {\r\n  try {\r\n    const res = await axios.put(`/auth/${id}`, { key: true });\r\n    return res;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const login = async (dispatch, user) => {\r\n  dispatch(loginStart());\r\n  try {\r\n    const res = await axios.post(\"/auth/login\", user);\r\n    dispatch(loginSuccess(res.data));\r\n    return res;\r\n  } catch (err) {\r\n    dispatch(loginFailure());\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const register = async (user) => {\r\n  try {\r\n    const res = await axios.post(\"/auth/register\", user);\r\n    return res;\r\n  } catch (err) {\r\n    return err;\r\n  }\r\n};\r\n\r\nexport const getUser = async (username, dispatch) => {\r\n  dispatch(getUserStart());\r\n  try {\r\n    const res = await axios.get(`/auth/?username=${username}`);\r\n    dispatch(getUserSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getUserFailure());\r\n  }\r\n};\r\n\r\nexport const getEntry = async (username, month, year, dispatch) => {\r\n  dispatch(getEntriesStart());\r\n  try {\r\n    const res = await axios.get(`/entries/${username}/${year}/${month}`);\r\n    dispatch(getEntriesSuccess(res.data));\r\n  } catch (err) {\r\n    dispatch(getEntriesFailure());\r\n  }\r\n};\r\n\r\nexport const deleteEntry = async (id, key, dispatch) => {\r\n  dispatch(deleteEntriesStart());\r\n  try {\r\n    const res = await axios.delete(`/entries/${id}`, {\r\n      data: { admin_key: key },\r\n    });\r\n    dispatch(deleteEntriesSuccess({ id: id }));\r\n    return res.data;\r\n  } catch (err) {\r\n    dispatch(deleteEntriesFailure());\r\n    return err.response.data;\r\n  }\r\n};\r\n\r\nexport const updateEntry = async (id, Entries, dispatch) => {\r\n  dispatch(updateEntriesStart());\r\n  try {\r\n    // update\r\n    await axios.put(`/entries/${id}`, Entries);\r\n    dispatch(updateEntriesSuccess({ id, Entries }));\r\n  } catch (err) {\r\n    dispatch(updateEntriesFailure());\r\n  }\r\n};\r\n\r\nexport const addEntry = async (entries, dispatch) => {\r\n  dispatch(addEntriesStart());\r\n  try {\r\n    const res = await axios.post(`/entries`, entries);\r\n    dispatch(addEntriesSuccess(res.data));\r\n    return res;\r\n  } catch (err) {\r\n    dispatch(addEntriesFailure());\r\n    return err;\r\n  }\r\n};\r\n","import { mobile } from \"../responsive\";\r\nimport { logout } from \"../redux/apiCalls\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Top = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 30px;\r\n  padding-bottom: 10px;\r\n  background-color: #71cad0;\r\n  width: 100%;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  font-family: 'CoreCircus', sans-serif;\r\n\ttext-transform: uppercase;\r\n\tline-height: 1;\r\n\tmargin: 0;\r\n\tcolor: #61c0c8;\r\n\ttext-shadow: 1px 0px 0px #67c2c5,\r\n\t\t0px 1px 0px #67c2c5,\r\n\t\t2px 1px 0px #67c2c5,\r\n\t\t1px 2px 0px #67c2c5,\r\n\t\t3px 2px 0px #67c2c5,\r\n\t\t2px 3px 0px #67c2c5,\r\n\t\t4px 3px 0px #67c2c5,\r\n\t\t3px 4px 0px #67c2c5,\r\n\t\t5px 4px 0px #67c2c5,\r\n\t\t4px 5px 0px #67c2c5,\r\n\t\t6px 5px 0px #67c2c5,\r\n\t\t5px 6px 0px #67c2c5,\r\n\t\t7px 6px 0px #67c2c5,\r\n\t\t6px 7px 0px #67c2c5;\r\n\r\n  ${mobile({ padding: 0 })}\r\n\r\n\t&:before,&:after {\r\n\t\tcontent: attr(data-heading);\r\n\t\tposition: absolute;\r\n\t\toverflow: hidden;\r\n\t\tleft: 0;\r\n\t\ttop: 0;\r\n\t}\r\n\t&:before {\r\n\t\tcolor: white;\r\n\t\twidth: 100%;\r\n\t\tz-index: 5;\r\n\t\tfont-family: 'CoreCircus2DIn';\r\n\t\tfont-weight: normal;\r\n\t}\r\n\t&:after {\r\n\t\tz-index: -1;\r\n\t\ttext-shadow: \r\n\t\t\t-1px -1px 0 white,\r\n\t\t\t1px -1px 0 white, \r\n\t\t\t-1px 1px 0 white, \r\n\t\t\t1px 1px 0 white, \r\n\t\t\t-3px 3px 2px #6c9d9e, \r\n\t\t\t-5px 5px 2px #6c9d9e,\r\n\t\t\t-7px 7px 2px #6c9d9e,\r\n\t\t\t-8px 8px 2px #6c9d9e,\r\n\t\t\t-9px 9px 2px #6c9d9e,\r\n\t\t\t-11px 11px 2px #6c9d9e;\r\n\t}\r\n`;\r\nconst Nav = styled.div`\r\n  margin-top: 50px;\r\n  display: flex;\r\n`;\r\nconst NavLeft = styled.span`\r\n  flex: 9;\r\n`;\r\nconst NavRight = styled.span`\r\n  flex: 1;\r\n`;\r\nconst Logout = styled.span`\r\n  margin-left: 10px;\r\n  color: red;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Topbar = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  \r\n  const Month = [];\r\n  Month[0] = \"January\";\r\n  Month[1] = \"February\";\r\n  Month[2] = \"March\";\r\n  Month[3] = \"April\";\r\n  Month[4] = \"May\";\r\n  Month[5] = \"June\";\r\n  Month[6] = \"July\";\r\n  Month[7] = \"August\";\r\n  Month[8] = \"September\";\r\n  Month[9] = \"October\";\r\n  Month[10] = \"November\";\r\n  Month[11] = \"December\";\r\n  const d = new Date();\r\n  let month = Month[d.getMonth()];\r\n  let date = d.getDate();\r\n  let year = d.getFullYear();\r\n\r\n  return (\r\n    <>\r\n      <Top><Link to=\"/\" style={{textDecoration:\"none\", color:\"white\"}}>\r\n        Mess Meal Tracker\r\n      </Link></Top>\r\n       <Nav>\r\n        {user && <NavLeft>Today is {month + \" \" + date + \", \" + year}</NavLeft>}\r\n        {user && (\r\n          <NavRight>\r\n          <Link to=\"/admin\" style={{textDecoration:\"none\", color: \"black\", cursor: \"pointer\"}}>{user.username}</Link>\r\n            <Logout onClick={() => logout(dispatch)}>(Logout)</Logout>\r\n          </NavRight>\r\n        )}\r\n      </Nav>\r\n      <br />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topbar;","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { mobile } from \"../responsive\";\r\nimport { login } from \"../redux/apiCalls\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Topbar from \"../components/Topbar\";\r\n\r\nconst Form = styled.form``;\r\nconst Fieldset = styled.fieldset`\r\n  border: 1px solid grey;\r\n`;\r\nconst Legend = styled.legend`\r\n  font-weight: bolder;\r\n`;\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: whitesmoke;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n`;\r\n\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n  margin-bottom: 3px;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  width: 30%;\r\n  margin: 10px;\r\n  padding: 10px;\r\n`;\r\nconst Error = styled.span`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n  color: #059;\r\n  background-color: #bef;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  padding: 5px;\r\n  border: 1px solid black;\r\n  background-color: #daeeda;\r\n`;\r\nconst ButtonOnLoad = styled.button`\r\n  background-color: #04aa6d;\r\n  width: 100px;\r\n  border: none;\r\n  color: white;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    login(dispatch, { username, password }).then((res) =>\r\n      setError(res.request.responseText)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Fieldset>\r\n          <Legend>Login To Your Account</Legend>\r\n          <Wrapper>\r\n            {/* Input Fields */}\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Username *\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              minLength=\"3\"\r\n              required\r\n            />\r\n            <Input\r\n              type={!show?\"password\":\"text\"}\r\n              placeholder=\"Password *\"\r\n              minLength=\"4\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              required\r\n            />\r\n            <Label>\r\n              <input type=\"checkbox\" onChange={() => setShow(!show)} />\r\n              {show ? \"Hide Password\" : \"Show Password\"}\r\n            </Label>\r\n\r\n            {/* If Button is Loading */}\r\n            {user.isFetching && (\r\n              <ButtonOnLoad disabled>\r\n                <i className=\"fa fa-spinner fa-spin\"></i> Logging In\r\n              </ButtonOnLoad>\r\n            )}\r\n\r\n            {/* Normal Button */}\r\n            {!user.isFetching && <Button>Login</Button>}\r\n          </Wrapper>\r\n\r\n\r\n\r\n          {/* If Error Fetched By Server */}\r\n          {error !== \"\" && (\r\n            <Error\r\n              style={{\r\n                color: \"#D8000C\",\r\n                backgroundColor: \"#FFBABA\",\r\n              }}\r\n            >\r\n              {error.slice(1, -1)}\r\n            </Error>\r\n          )}\r\n        </Fieldset>\r\n      </Form>\r\n\r\n\r\n\r\n      {/* Useful Links */}\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/register\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ REGISTER HERE\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/forgot_pass\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ FORGOT PASSWORD\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { deleteEntry } from \"./../redux/apiCalls\";\r\nimport { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  overflow-x: auto;\r\n`;\r\nconst TABLE = styled.table`\r\n  border: 1px solid green;\r\n  width: 100%;\r\n`;\r\nconst CAPTION = styled.caption`\r\n  font-weight: bolder;\r\n  display: inline;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst TBODY = styled.tbody`\r\n  &:nth-child(even) {\r\n    background-color: #d7e5f1;\r\n  }\r\n  background-color: #e5ecf0;\r\n`;\r\nconst TR = styled.tr`\r\n  display: flex;\r\n`;\r\nconst TH = styled.th`\r\n  flex: 1;\r\n  width: 100px;\r\n  text-align: left;\r\n  border-bottom: 1px solid black;\r\n  padding: 10px;\r\n  background-color: #8aa18a;\r\n  border-right: 1px solid white;\r\n`;\r\nconst TD = styled.td`\r\n  flex: 1;\r\n  width: 100px;\r\n  text-align: left;\r\n  padding: 10px;\r\n  border-right: 1px solid white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: block; /* Hidden by default */\r\n  position: fixed; /* Stay in place */\r\n  z-index: 1; /* Sit on top */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%; /* Full width */\r\n  height: 100%; /* Full height */\r\n  overflow: auto; /* Enable scroll if needed */\r\n  background-color: rgb(0, 0, 0); /* Fallback color */\r\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  padding: 2px 16px;\r\n  background-color: #344234;\r\n  color: white;\r\n`;\r\nconst ModalBody = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  color: #883434;\r\n  font-weight: bold;\r\n  font-size: 20px;\r\n`;\r\nconst ModalFooter = styled.div`\r\n  padding: 2px 16px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n`;\r\nconst ModalContent = styled.div`\r\n  position: relative;\r\n  background-color: gray;\r\n  color: white;\r\n  margin: auto;\r\n  padding: 0;\r\n  border: 1px solid #888;\r\n  top: 40%;\r\n  width: 80%;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  animation-name: animatetop;\r\n  animation-duration: 1s;\r\n`;\r\n\r\nconst Close = styled.span`\r\n  color: red;\r\n  float: right;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  border-radius: 100%;\r\n  background-color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  background-color: #ddd;\r\n  border: none;\r\n  outline: none;\r\n  color: black;\r\n  text-align: center;\r\n  margin: 4px 2px;\r\n  cursor: pointer;\r\n  border-radius: 16px;\r\n`;\r\n\r\nexport default function EntryList({ monthId, year, admin }) {\r\n  const dispatch = useDispatch();\r\n  const entries = useSelector((state) => state.data.entries);\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const [keyResponse, setKeyResponse] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"Confirm\");\r\n  const [id, setId] = useState(\"\"); // if id is not empty modal will open\r\n  const [key, setKey] = useState(\"\");\r\n\r\n  const Month = [];\r\n  Month[0] = \"January\";\r\n  Month[1] = \"February\";\r\n  Month[2] = \"March\";\r\n  Month[3] = \"April\";\r\n  Month[4] = \"May\";\r\n  Month[5] = \"June\";\r\n  Month[6] = \"July\";\r\n  Month[7] = \"August\";\r\n  Month[8] = \"September\";\r\n  Month[9] = \"October\";\r\n  Month[10] = \"November\";\r\n  Month[11] = \"December\";\r\n\r\n  const d = new Date();\r\n  const date = d.getDate();\r\n  let month, displayingMonth;\r\n\r\n  if (monthId === \"0\") {\r\n    monthId = 11;\r\n    year -= 1;\r\n    month = \"December\";\r\n    displayingMonth = \"January\";\r\n  } else {\r\n    monthId -= 1;\r\n    month = Month[monthId];\r\n    displayingMonth = Month[monthId + 1];\r\n  }\r\n\r\n  const deleteHandler = () => {\r\n    setConfirm(\"Deleting..\");\r\n    deleteEntry(id, key, dispatch).then((res) => {\r\n      setKeyResponse(res);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        {/* Delete Entry Model */}\r\n        {id && (\r\n          <Modal>\r\n            <ModalContent>\r\n              {keyResponse === \"\" && (\r\n                <>\r\n                  <ModalHeader>\r\n                    <Close onClick={() => setId(false)}>&times;</Close>\r\n                    Enter your key below and click confirm to delete the\r\n                    requested entry:\r\n                  </ModalHeader>\r\n                  <ModalBody>\r\n                    <Input\r\n                      type=\"number\"\r\n                      placeholder=\"0000\"\r\n                      name=\"admin_key\"\r\n                      value={key}\r\n                      onChange={(e) => setKey(e.target.value)}\r\n                    />\r\n                    <span onClick={deleteHandler}>{confirm}</span>\r\n                  </ModalBody>\r\n                </>\r\n              )}\r\n              {keyResponse !== \"\" && (\r\n                <>\r\n                  <ModalHeader>\r\n                    <Close\r\n                      onClick={() => {\r\n                        setId(false);\r\n                        setKeyResponse(\"\");\r\n                        setConfirm(\"Confirm\");\r\n                      }}\r\n                    >\r\n                      &times;\r\n                    </Close>\r\n                  </ModalHeader>\r\n                  <ModalFooter>{keyResponse}</ModalFooter>\r\n                </>\r\n              )}\r\n            </ModalContent>\r\n          </Modal>\r\n        )}\r\n\r\n        <TABLE>\r\n          <CAPTION>{displayingMonth} Report</CAPTION>\r\n          {entries.length === 0 ? (\r\n            <>\r\n              <h3>As empty as a politician's promises. ツ</h3>\r\n              <h4>Lets start updating data by clicking on your username.</h4>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <TBODY>\r\n                <TR>\r\n                  <TH>Date</TH>\r\n                  <TH>Spent</TH>\r\n                  <TH>Reserved</TH>\r\n                  <TH>By</TH>\r\n                  {user.members.map((i) => (\r\n                    <TH key={i}>{i}</TH>\r\n                  ))}\r\n                  <TH>Daily Total</TH>\r\n                  {admin && <TH>Actions</TH>}\r\n                </TR>\r\n              </TBODY>\r\n              {entries.length > 0 &&\r\n                entries.map((item, j) => (\r\n                  <TBODY key={item._id}>\r\n                    <TR>\r\n                      <TD>{item.date}</TD>\r\n                      <TD>{item.spent.toFixed(2)}</TD>\r\n                      <TD>{item.reserved.toFixed(2)}</TD>\r\n                      <TD>{item.by}</TD>\r\n                      {user.members.map((i) => (\r\n                        <TD key={i}>\r\n                          {item.meals[`${i}`] ? item.meals[`${i}`] : 0}\r\n                        </TD>\r\n                      ))}\r\n                      <TD>{item?.totalMeals}</TD>\r\n                      {admin &&\r\n                        (date === item.date || date - 1 === item.date ? (\r\n                          <TD onClick={() => setId(item._id)}> 🗑️</TD>\r\n                        ) : (\r\n                          <TD></TD>\r\n                        ))}\r\n                    </TR>\r\n                  </TBODY>\r\n                ))}\r\n            </>\r\n          )}\r\n        </TABLE>\r\n      </Container>\r\n\r\n      <Link\r\n        to={{ pathname: `/${year}/${monthId}` }}\r\n        style={{ textDecoration: \"none\" }}\r\n      >\r\n        ❮ {month}, {year} Report\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { updateUser } from \"../redux/apiCalls\";\r\n\r\nconst Container = styled.div`\r\n  flex: 1;\r\n`;\r\nconst MAINTABLE = styled.table`\r\n  margin-bottom: 1px;\r\n  width: 100%;\r\n  background-color: whitesmoke;\r\n  border-bottom: 1px solid black;\r\n`;\r\nconst TABLE = styled.table`\r\n  margin-bottom: 2px;\r\n  width: 100%;\r\n  box-shadow: 1px 1px 1px 0.5px rgba(0, 0, 0, 0.75) inset;\r\n  &:nth-child(even) {\r\n    background-color: #c0d4e4;\r\n  }\r\n  background-color: #fbfcfd;\r\n`;\r\nconst CAPTION = styled.caption`\r\n  font-weight: bolder;\r\n  display: inline;\r\n`;\r\n\r\nconst TBODY = styled.tbody``;\r\nconst TR = styled.tr`\r\n  display: flex;\r\n`;\r\nconst TH = styled.th`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 15px;\r\n  font-weight: normal;\r\n`;\r\nconst TD = styled.td`\r\n  flex: 1;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  font-size: 12px;\r\n  width: 50px;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: #7a0710;\r\n  width: 35px;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  border-radius: 40%;\r\n`;\r\nconst Info = styled.div`\r\n  color: #059;\r\n  background-color: #bef;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n`;\r\n\r\nconst FinalReport = ({ admin }) => {\r\n  const dispatch = useDispatch();\r\n  const entries = useSelector((state) => state.data.entries);\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const [key, setKey] = useState(\"\");\r\n  const [info, setInfo] = useState(\"\");\r\n\r\n  let allMeals = 0,\r\n    allSpent = 0,\r\n    allReserved = 0;\r\n\r\n  // set initialMeals per member to 0\r\n  let initialMeals = {};\r\n  for (let i = 0; i < user.members.length; i++) {\r\n    initialMeals[user.members[i]] = 0;\r\n  }\r\n\r\n  // set initialReserved per member to 0\r\n  let initialReserved = {};\r\n  for (let i = 0; i < user.members.length; i++) {\r\n    initialReserved[user.members[i]] = 0;\r\n  }\r\n  //console.log(initialReserved)\r\n\r\n  for (const i in entries) {\r\n    const by = entries[i].by;\r\n    initialReserved[by] += entries[i].reserved;\r\n    allMeals += entries[i].totalMeals;\r\n    allSpent += entries[i].spent;\r\n    allReserved += entries[i].reserved;\r\n    for (let j = 0; j < user.members.length; j++) {\r\n      initialMeals[user.members[j]] += entries[i].meals[user.members[j]];\r\n      if (isNaN(initialMeals[user.members[j]]))\r\n        initialMeals[user.members[j]] = 0;\r\n    }\r\n  }\r\n  let mealRate = allSpent / allMeals;\r\n\r\n  const deleteMember = (id) => {\r\n    let members = [...user.members];\r\n    members.splice(id, 1);\r\n    updateUser(user._id, { members: members, admin_key: key }, dispatch);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      {info && <Info>{info}</Info>}\r\n      <MAINTABLE>\r\n        <CAPTION>Final Calculation</CAPTION>\r\n        <TBODY>\r\n          <TR>\r\n            <TH>Total Meals</TH>\r\n            <TH>Total Spent</TH>\r\n            <TH>Total Reserve</TH>\r\n            <TH>Remaining</TH>\r\n            <TH>Meal Rate</TH>\r\n          </TR>\r\n        </TBODY>\r\n        <TBODY>\r\n          <TR>\r\n            <TD>{allMeals}</TD>\r\n            <TD>{allSpent.toFixed(2)}</TD>\r\n            <TD>{allReserved.toFixed(2)}</TD>\r\n            <TD>{(allReserved - allSpent).toFixed(2)}</TD>\r\n            <TD>{isNaN(mealRate)?\"0.00\":mealRate.toFixed(2)}</TD>\r\n          </TR>\r\n        </TBODY>\r\n      </MAINTABLE>\r\n      <br />\r\n      {user.members.map((i, j) => (\r\n        <TABLE key={j}>\r\n          <CAPTION>{i}</CAPTION>\r\n          <TBODY>\r\n            <TR>\r\n              <TH>Meals</TH>\r\n              <TH>Reserved</TH>\r\n              <TH>Due(-) | Extra(+)</TH>\r\n              {admin && <TH>Actions</TH>}\r\n            </TR>\r\n          </TBODY>\r\n          <TBODY>\r\n            <TR>\r\n              <TD>{initialMeals[i]}</TD>\r\n              <TD>{initialReserved[i].toFixed(2)}</TD>\r\n              <TD>\r\n                {isNaN(initialReserved[i] - initialMeals[i] * mealRate)?\"0.00\":(initialReserved[i] - initialMeals[i] * mealRate).toFixed(2)}\r\n              </TD>\r\n              {admin && initialMeals[i] === 0 && initialReserved[i] <= 1 ? (\r\n                <TD>\r\n                  <Input\r\n                    type=\"number\"\r\n                    name=\"key\"\r\n                    minLength=\"4\"\r\n                    maxLength=\"4\"\r\n                    value={key}\r\n                    placeholder=\"Key\"\r\n                    required\r\n                    onChange={(e) => setKey(e.target.value)}\r\n                  />\r\n                  <Button onClick={(e) => deleteMember(j)}>✘</Button>\r\n                </TD>\r\n              ) : (\r\n                admin && (\r\n                  <TD>\r\n                    <Button\r\n                      onClick={() =>\r\n                        setInfo(\r\n                          `You Can't Do Anything With This Member Right Now Since S/He Has Contributed To This Month.`\r\n                        )\r\n                      }\r\n                    >\r\n                      VIP\r\n                    </Button>\r\n                  </TD>\r\n                )\r\n              )}\r\n            </TR>\r\n          </TBODY>\r\n        </TABLE>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FinalReport;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\nimport { updateUser } from \"../redux/apiCalls\";\r\nimport { updateKey } from \"./../redux/apiCalls\";\r\n\r\nconst Form = styled.form`\r\n`;\r\n\r\nconst Title = styled.div`\r\n  font-weight: bolder;\r\n  font-size: 20px;\r\n  background-color: ghostwhite;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  margin-bottom: 10px;\r\n  padding: 2px;\r\n  text-transform: capitalize;\r\n`;\r\nconst Label = styled.label`\r\n  color: #132513;\r\n  font-weight: bolder;\r\n`;\r\nconst Button = styled.button`\r\nbackground-color: #333;\r\nwidth: 70px;\r\nborder: none;\r\ncolor: white;\r\npadding: 2px;\r\ncursor: pointer;\r\nborder-radius: 12px;\r\nmargin-top:10px;\r\nmargin-left:50%\r\n`;\r\n\r\nconst Error = styled.div`\r\n  border: 1px solid;\r\n  margin: 10px 0px;\r\n  padding: 15px 10px 15px 50px;\r\n  background-repeat: no-repeat;\r\n  background-position: 10px center;\r\n  cursor: pointer;\r\n`;\r\nconst Info = styled.div`\r\n  color: #059;\r\n  background-color: #bef;\r\n  display: inline-block;\r\n  text-align: center;\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nexport default function UpdateUser({ admin }) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const [inputs, setInputs] = useState({\r\n    email: user.email,\r\n    key: \"\",\r\n    member: \"\"\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"Set Key\");\r\n  const [keyResult, setKeyResult] = useState();\r\n  const [next, setNext] = useState();\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    let members = user.members;\r\n    if(inputs.member.length>0) members = [...members, inputs.member];\r\n    const updatedUser = {\r\n      email: inputs.email,\r\n      admin_key: inputs.key,\r\n      members: members,\r\n    };\r\n    updateUser(user._id, updatedUser, dispatch).then((res) => {\r\n      setError(res.request);\r\n    });\r\n  };\r\n\r\n  const requestKey = (e) => {\r\n    e.preventDefault();\r\n    setConfirm(`Please Wait..`);\r\n    updateKey(user._id).then((res) => setKeyResult(res.request));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Title>Update Information</Title>\r\n        <br />\r\n        {/* If Error Fetched By Server */}\r\n        {error && error.status === 200 && (\r\n          <Error\r\n            style={{\r\n              color: \"#270\",\r\n              backgroundColor: \"#DFF2BF\",\r\n              margin: \"10px 0\",\r\n              padding: \"10px\",\r\n              borderRadius: \"3px 3px 3px 3px\",\r\n            }}\r\n          >\r\n            🌟 User Updated Successfully.\r\n          </Error>\r\n        )}\r\n        {error && error.status !== 200 && (\r\n          <Error\r\n            style={{\r\n              color: \"#D8000C\",\r\n              backgroundColor: \"#FFBABA\",\r\n              margin: \"10px 0\",\r\n              padding: \"10px\",\r\n              borderRadius: \"3px 3px 3px 3px\",\r\n            }}\r\n          >\r\n            ☹ {error.responseText.slice(1, -1)}\r\n          </Error>\r\n        )}\r\n        {/* When theres no member available also no key to update them */}\r\n        {!next && user.members.length === 0 && (\r\n          <>\r\n            Welcome and hope you are the manager since you're registering.\r\n            <br />\r\n            ⍟ First step is to set a key which will be required to update\r\n            anything here and will only be available to the manager who holds\r\n            the email associate with this account.\r\n            <br />\r\n            ⍟ If you already have the key please proceed to next.\r\n            <br />\r\n            {keyResult ? (\r\n              <Info>{keyResult.responseText.slice(1, -1)}</Info>\r\n            ) : (\r\n              <Button onClick={(e) => requestKey(e)}>{confirm}</Button>\r\n            )}\r\n            {/* Manager already got the key so wants to proceed next */}\r\n            <br />\r\n            <Button\r\n              style={{ position: \"fixed\", right: \"0\" }}\r\n              onClick={() => setNext(true)}\r\n            >\r\n              Next ➽\r\n            </Button>\r\n          </>\r\n        )}\r\n\r\n        {/* When theres members available or has a key and manager wants to add member */}\r\n        {(user.members.length > 0 || next) && (\r\n          <>\r\n            {next ? <Label>Add Yourself: </Label> : <Label>Members: </Label>}\r\n            {user.members.map((i) => i + \", \")}\r\n            <Input\r\n              style={{ textTransform: \"capitalize\" }}\r\n              type=\"text\"\r\n              name=\"member\"\r\n              maxLength=\"20\"\r\n              placeholder={next ? \"Name\" : \"Add Another..\"}\r\n              value={inputs?.member}\r\n              onChange={(e) => handleChange(e)}\r\n            />\r\n            {!next && (\r\n              <>\r\n                <br />\r\n                <Label>Manager Email Address: </Label>\r\n                <Input\r\n                  style={{ textTransform: \"lowercase\" }}\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  maxLength=\"100\"\r\n                  value={inputs?.email}\r\n                  onChange={(e) => handleChange(e)}\r\n                  required\r\n                />\r\n              </>\r\n            )}\r\n            <br />\r\n            <Label>Your Key: </Label>\r\n            <Input\r\n              style={{\r\n                outline: \"none\",\r\n                fontSize: \"12px\",\r\n                width: \"50px\",\r\n              }}\r\n              maxLength=\"4\"\r\n              minLength=\"4\"\r\n              type=\"number\"\r\n              name=\"key\"\r\n              placeholder=\"key\"\r\n              value={inputs?.key}\r\n              onChange={(e) => handleChange(e)}\r\n              required\r\n            />\r\n            <br />\r\n            <Button\r\n              disabled={\r\n                inputs.member.length === 0 && inputs.email === user.email\r\n              }\r\n            >\r\n              Update\r\n            </Button>\r\n          </>\r\n        )}\r\n      </Form>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getEntry, getUser } from \"../redux/apiCalls\";\r\nimport { useEffect } from \"react\";\r\nimport { mobile } from \"../responsive\";\r\nimport Topbar from \"../components/Topbar\";\r\nimport EntryList from \"../components/EntryList\";\r\nimport FinalReport from \"../components/FinalReport\";\r\nimport UpdateUser from '../components/UpdateUser';\r\nimport { useParams } from \"react-router\";\r\n\r\nconst Container = styled.div`\r\n`;\r\nconst Menu = styled.div`\r\n  display: flex;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n`;\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n\r\n  const  p = useParams();\r\n\r\n  const d = new Date();\r\n  let monthId = p.monthId?p.monthId:d.getMonth();\r\n  let year = p.year?p.year:d.getFullYear();\r\n\r\n\r\n  useEffect(() => {\r\n    getEntry(user.username, monthId, year, dispatch);\r\n  }, [user, dispatch, monthId, year]);\r\n\r\n  useEffect(()=>{\r\n    getUser(user.username, dispatch);\r\n  }, [user.username, dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <Topbar />\r\n      {user.members.length===0 && <UpdateUser />}\r\n      {user.members.length > 0 && (\r\n        <>\r\n          <Menu>\r\n            <FinalReport />\r\n          </Menu>\r\n          <br />\r\n          <br />\r\n          <EntryList monthId={monthId} year={year} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Home;","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { addEntry, updateKey } from \"../redux/apiCalls\";\r\nimport { useEffect, useState } from \"react\";\r\nimport UpdateUser from \"./UpdateUser\";\r\nimport { mobile } from \"../responsive\";\r\n\r\nconst ForgotClick = styled.button`\r\n  outline: none;\r\n  border: none;\r\n  cursor: pointer;\r\n`;\r\nconst Form = styled.form`\r\n  flex: 1;\r\n`;\r\nconst Title = styled.div`\r\n  color: #20ad4ae8;\r\n  font-weight: bolder;\r\n  font-size: 20px;\r\n  background-color: ghostwhite;\r\n`;\r\nconst Top = styled.div`\r\n  display: flex;\r\n`;\r\nconst InputTitle = styled.div`\r\n  color: #20ad4ae8;\r\n  font-weight: bolder;\r\n  margin-right: 3px;\r\n  display: inline-block;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  width: 200px;\r\n  height: 25px;\r\n  padding: 9px;\r\n  margin: 3px 3px 3px 3px;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n`;\r\nconst Select = styled.select`\r\n  width: 60px;\r\n  height: 25px;\r\n  margin: 3px 3px 3px 0;\r\n  -moz-box-sizing: border-box;\r\n  -webkit-box-sizing: border-box;\r\n  box-sizing: border-box;\r\n  cursor: pointer;\r\n`;\r\nconst Button = styled.button`\r\n  background-color: #066d47a4;\r\n  width: 70px;\r\n  border: none;\r\n  color: white;\r\n  padding: 2px;\r\n  cursor: pointer;\r\n  border-radius: 12px;\r\n  margin-top:10px;\r\n  margin-left:10%\r\n`;\r\nconst ButtonOnLoad = styled.button`\r\n  background-color: #04aa6d;\r\n  width: 100px;\r\n  border: none;\r\n  color: white;\r\n  padding: 5px;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n  display: block; /* Hidden by default */\r\n  position: fixed; /* Stay in place */\r\n  z-index: 1; /* Sit on top */\r\n  left: 0;\r\n  top: 0;\r\n  width: 100%; /* Full width */\r\n  height: 100%; /* Full height */\r\n  overflow: auto; /* Enable scroll if needed */\r\n  background-color: rgb(0, 0, 0); /* Fallback color */\r\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\r\n`;\r\n\r\nconst ModalHeader = styled.div`\r\n  padding: 2px 16px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n`;\r\nconst ModalBody = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  color: red;\r\n  border-radius: 50%;\r\n`;\r\nconst ModalFooter = styled.div`\r\n  padding: 2px 16px;\r\n  background-color: #5cb85c;\r\n  color: white;\r\n`;\r\nconst ModalContent = styled.div`\r\n  position: relative;\r\n  background-color: black;\r\n  color: white;\r\n  margin: auto;\r\n  padding: 0;\r\n  border: 1px solid #888;\r\n  top: 40%;\r\n  width: 50%;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\r\n  animation-name: animatetop;\r\n  animation-duration: 1s;\r\n`;\r\n\r\nconst Close = styled.span`\r\n  color: red;\r\n  float: right;\r\n  font-size: 22px;\r\n  font-weight: bold;\r\n  border-radius: 100%;\r\n  background-color: white;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Error = styled.div`\r\n  border: 1px solid;\r\n  margin: 10px 0px;\r\n  padding: 15px 10px 15px 50px;\r\n  background-repeat: no-repeat;\r\n  background-position: 10px center;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  justify-content:space-between;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n`;\r\n\r\nconst Left = styled.div``;\r\n\r\nconst MyButton = styled.button`\r\nborder-radius:50%;\r\nwidth:25;\r\nheight:25;\r\nbackground-color:white;\r\ncolor:green;\r\n&:active {\r\n  box-shadow: box-shadow:\r\n    7px 6px 28px 1px rgba(0, 0, 0, 0.24);\r\n  transform: translateY(4px);\r\n}\r\n`;\r\nconst EntryForm = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n\r\n  const d = new Date();\r\n  let date = d.getDate();\r\n\r\n  const [inputs, setInputs] = useState({\r\n    user: user.username,\r\n    spent: 0,\r\n    reserved: 0,\r\n    by: \"\",\r\n    date: date,\r\n    admin_key: \"\",\r\n  });\r\n  const [prompt, setPrompt] = useState(false);\r\n  const [keyResponse, setKeyResponse] = useState(\"\");\r\n  const [error, setError] = useState({}); // after submitting show result\r\n  const [confirm, setConfirm] = useState(\"Confirm\"); // after confirming key show loading animation\r\n  const [loading, setLoading] = useState(false); // after submitting show loading animation\r\n  const [totalMeals, setTotalMeals] = useState(0);\r\n\r\n  //set initialMeals per member as 0\r\n  let initialMeals = {};\r\n  for (let i = 0; i < user.members.length; i++) {\r\n    initialMeals[user.members[i]] = 0;\r\n  }\r\n\r\n  const [meals, setMeals] = useState({ ...initialMeals });\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleMeals = (name, value) => {\r\n    setMeals({...meals, [name]: value});\r\n  };\r\n  useEffect(()=>{\r\n    let total =0;\r\n    for (const i in meals) {\r\n      total += meals[i];\r\n    }\r\n    setTotalMeals(total)  \r\n  },[meals])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    addEntry({ ...inputs, meals, totalMeals }, dispatch).then((res) => {\r\n      //console.log(res.response.data.message);\r\n      setError(res);\r\n      console.log(res.request)\r\n      setLoading(false);\r\n    });\r\n  };\r\n\r\n\r\n  const requestKey = () => {\r\n    setConfirm(`Please Wait..`);\r\n    updateKey(user._id).then((res) => setKeyResponse(res.request.responseText));\r\n  };\r\n\r\n  return (\r\n    <>\r\n\r\n      {/* Reset Key Modal */}\r\n      {prompt && (\r\n        <Modal>\r\n          <ModalContent>\r\n            {keyResponse === \"\" && (\r\n              <>\r\n                <ModalHeader>\r\n                  <Close onClick={() => setPrompt(false)}>&times;</Close>\r\n                  Are you sure you want to reset the admin key?\r\n                </ModalHeader>\r\n                <ModalBody onClick={requestKey}>{confirm}</ModalBody>\r\n              </>\r\n            )}\r\n            {keyResponse !== \"\" && (\r\n              <>\r\n                <ModalHeader>\r\n                  <Close onClick={() => setPrompt(false)}>&times;</Close>\r\n                </ModalHeader>\r\n                <ModalFooter>{keyResponse.slice(1, -1)}</ModalFooter>\r\n              </>\r\n            )}\r\n          </ModalContent>\r\n        </Modal>\r\n      )}\r\n      <Container>\r\n      {/* Admin Form */}\r\n      <Left>\r\n          {/* Start Form Inputs */}\r\n          <Title>Submit Todays Entry</Title>\r\n          <br />\r\n          {/* If Error Fetched By Server */}\r\n          {error?.request?.status === 201? (\r\n            <Error\r\n              style={{\r\n                color: \"#270\",\r\n                backgroundColor: \"#DFF2BF\",\r\n                margin: \"10px 0\",\r\n                padding: \"10px\",\r\n                borderRadius: \"3px 3px 3px 3px\",\r\n              }}\r\n            >\r\n              Entry Added Successfully.\r\n            </Error>):error?.request?.status === 400? (\r\n            <Error\r\n              style={{\r\n                color: \"#D8000C\",\r\n                backgroundColor: \"#FFBABA\",\r\n                margin: \"10px 0\",\r\n                padding: \"10px\",\r\n                borderRadius: \"3px 3px 3px 3px\",\r\n              }}\r\n            >\r\n               {error?.response?.data?.message}\r\n            </Error>):error?.request?.status === 401?(\r\n            <Error\r\n              style={{\r\n                color: \"#D8000C\",\r\n                backgroundColor: \"#FFBABA\",\r\n                margin: \"10px 0\",\r\n                padding: \"10px\",\r\n                borderRadius: \"3px 3px 3px 3px\",\r\n              }}\r\n            >\r\n               {error?.request?.responseText.slice(1, -1)}\r\n            </Error>):\"\"}\r\n          <Top>\r\n            <InputTitle>\r\n              Money Spent:\r\n              <Input\r\n                style={{ width: \"60px\", margin: \"3px\" }}\r\n                type=\"number\"\r\n                name=\"spent\"\r\n                value={inputs.spent}\r\n                onChange={handleChange}\r\n              />\r\n            </InputTitle>\r\n            <InputTitle>\r\n              Reserved Money:\r\n              <Input\r\n                style={{ width: \"60px\", margin: \"3px\" }}\r\n                type=\"number\"\r\n                name=\"reserved\"\r\n                value={inputs.reserved}\r\n                onChange={handleChange}\r\n              />\r\n            </InputTitle>\r\n\r\n            <InputTitle>\r\n              By:\r\n              <Select\r\n                name=\"by\"\r\n                value={inputs.by}\r\n                onChange={handleChange}\r\n                required\r\n              >\r\n                <option value=\"\" disabled>\r\n                  Select\r\n                </option>\r\n                {user.members.map((i) => (\r\n                  <option value={i} key={i}>\r\n                    {i}\r\n                  </option>\r\n                ))}\r\n              </Select>\r\n            </InputTitle>\r\n          </Top>\r\n          <InputTitle>\r\n            Manager Key:\r\n            <Input\r\n              style={{ fontSize: \"12px\", width: \"70px\" }}\r\n              type=\"number\"\r\n              placeholder=\"0000\"\r\n              name=\"admin_key\"\r\n              value={inputs.admin_key}\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n          </InputTitle>\r\n\r\n          {/* Meals Container */}\r\n          <div style={{display:\"flex\", flexDirection:\"column\"}}>\r\n            <InputTitle>\r\n              Meals:\r\n            </InputTitle>\r\n            {user.members.map(i => (\r\n            <div style={{\r\n              display:\"flex\", \r\n              flexDirection:\"row\",  \r\n              margin:2, \r\n              borderLeft: \"3px solid #2196F3\",\r\n              paddingLeft:10,\r\n              backgroundColor: \"#ddffff\"\r\n              }}\r\n              key={i + i}>\r\n              <span style={{flex:2}}>{i}</span>\r\n              <div style={{flex:1, display:\"flex\", justifyContent:\"space-between\", alignItems:\"center\"}}>\r\n                <MyButton onClick={() => meals[i]!==0 && handleMeals(i, meals[i] - 1)}>\r\n                ▼\r\n                </MyButton>\r\n                <span>{meals[i]}</span>\r\n                <MyButton onClick={() => handleMeals(i, meals[i] + 1)}>\r\n                ▲\r\n                </MyButton>\r\n                </div>\r\n              </div>))}\r\n              <div>\r\n             <InputTitle>Total Meals: </InputTitle><big>{totalMeals}</big></div>\r\n          </div>\r\n\r\n\r\n          {/* If Button is Loading */}\r\n          {loading && (\r\n            <ButtonOnLoad disabled>\r\n              <i className=\"fa fa-spinner fa-spin\"></i> Submitting\r\n            </ButtonOnLoad>\r\n          )}\r\n          {/* Normal Button */}\r\n          {!loading && <Button onClick={handleSubmit}>Submit</Button>}\r\n      </Left>\r\n      <UpdateUser />\r\n      <br />\r\n    </Container>\r\n    <div style={{ display:\"flex\", justifyContent:\"center\"}}>\r\n          Can't Remember Key (\r\n          <ForgotClick onClick={() => setPrompt(true)}>Reset</ForgotClick>)\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EntryForm;\r\n","import styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { getEntry, getUser } from \"../redux/apiCalls\";\r\nimport { useEffect } from \"react\";\r\nimport { mobile } from \"../responsive\";\r\nimport Topbar from \"../components/Topbar\";\r\nimport EntryForm from \"../components/EntryForm\";\r\nimport EntryList from \"../components/EntryList\";\r\nimport FinalReport from \"../components/FinalReport\";\r\nimport UpdateUser from \"../components/UpdateUser\";\r\n\r\nconst Container = styled.div``;\r\n\r\nconst Admin = () => {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  const Month = [];\r\n  Month[0] = \"January\";\r\n  Month[1] = \"February\";\r\n  Month[2] = \"March\";\r\n  Month[3] = \"April\";\r\n  Month[4] = \"May\";\r\n  Month[5] = \"June\";\r\n  Month[6] = \"July\";\r\n  Month[7] = \"August\";\r\n  Month[8] = \"September\";\r\n  Month[9] = \"October\";\r\n  Month[10] = \"November\";\r\n  Month[11] = \"December\";\r\n  const d = new Date();\r\n  let date = d.getDate();\r\n  let month = Month[d.getMonth()];\r\n  let monthId = d.getMonth();\r\n  let year = d.getFullYear();\r\n\r\n  useEffect(() => {\r\n    getEntry(user.username, monthId, year, dispatch);\r\n  }, [user, dispatch, monthId, year]);\r\n\r\n  useEffect(()=>{\r\n    getUser(user.username, dispatch);\r\n  }, [user.username, dispatch])\r\n\r\n  return (\r\n    <Container>\r\n      <Topbar />\r\n      {user.members.length === 0 && <UpdateUser />}\r\n      {user.members.length > 0 && (\r\n        <>\r\n            {user && <EntryForm />}\r\n            {/* {user && <MemberForm />} */}\r\n          <br />\r\n          <br />\r\n          <FinalReport admin={true} />\r\n          <EntryList month={month} date={date} admin={true} />\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Admin;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { login, register } from \"./../redux/apiCalls\";\r\nimport styled from \"styled-components\";\r\nimport Topbar from \"../components/Topbar\";\r\n\r\nconst Form = styled.form``;\r\nconst Fieldset = styled.fieldset`\r\n  border: 1px solid grey;\r\n`;\r\nconst Legend = styled.legend`\r\n  font-weight: bolder;\r\n`;\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n  background-color: whitesmoke;\r\n`;\r\nconst Label = styled.label`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 10px;\r\n  margin-bottom: 3px;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  width: 30%;\r\n  margin: 10px;\r\n  padding: 10px;\r\n`;\r\nconst Error = styled.span`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n  color: #059;\r\n  background-color: #bef;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  padding: 5px;\r\n  background-color: #daeeda;\r\n`;\r\n\r\nexport default function Register() {\r\n  const dispatch = useDispatch();\r\n  const [inputs, setInputs] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    email: \"\",\r\n  });\r\n  const [error, setError] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const handleChange = (e) => {\r\n    setInputs((prev) => {\r\n      return { ...prev, [e.target.name]: e.target.value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      ...inputs,\r\n    };\r\n    register(user).then((res) => setError(res.request));\r\n    login(dispatch, { username: user.username, password: user.password });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Fieldset>\r\n          <Legend>Create Account</Legend>\r\n          <Wrapper>\r\n            {/* INPUT FIELDS */}\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"Username *\"\r\n              name=\"username\"\r\n              onChange={handleChange}\r\n              minLength=\"3\"\r\n              maxLength=\"30\"\r\n              required\r\n            />\r\n            <Input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email *\"\r\n              onChange={handleChange}\r\n              required\r\n            />\r\n            <Input\r\n              type={!show?\"password\":\"text\"}\r\n              name=\"password\"\r\n              placeholder=\"Password *\"\r\n              onChange={handleChange}\r\n              minLength=\"4\"\r\n              required\r\n            />\r\n            <Label>\r\n              <input type=\"checkbox\" onChange={() => setShow(!show)} />\r\n              {show ? \"Hide Password\" : \"Show Password\"}\r\n            </Label>\r\n\r\n            <Button disabled={user.isFetching}>Register</Button>\r\n          </Wrapper>\r\n          {/* Fetching Error from Server Side */}\r\n          {error !== \"\" && (\r\n            <Error style={{ color: \"#D8000C\", backgroundColor: \"#FFBABA\" }}>\r\n             ☹ Username or email already exists!\r\n            </Error>\r\n          )}\r\n\r\n          {/* VALIIDATION from Client Side */}\r\n          {(inputs.username.length < 3 ||\r\n            inputs.password.length < 4 ||\r\n            !inputs.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)) && (\r\n            <Error>\r\n              {inputs.username.length < 3 && (\r\n                <>\r\n                  ✯ Username must be atleast 3 characters long. <br />\r\n                </>\r\n              )}\r\n              {inputs.password.length < 4 && (\r\n                <>\r\n                  ✯ Password must be atleast 4 characters long.\r\n                  <br />\r\n                </>\r\n              )}\r\n              {!inputs.email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) && (\r\n                <>✯ Email address must be valid.</>\r\n              )}\r\n            </Error>\r\n          )}\r\n        </Fieldset>\r\n      </Form>\r\n\r\n      {/* USEFULL LINKS */}\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/login\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ LOGIN HERE\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/forgot_pass\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ FORGOT PASSWORD\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nimport { useState } from \"react\";\r\nimport { forgotPass, resetPass } from \"../redux/apiCalls\";\r\nimport { useParams } from \"react-router\";\r\nimport Topbar from \"./Topbar\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Form = styled.form``;\r\nconst Fieldset = styled.fieldset`\r\n  border: 1px solid grey;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  background-color: whitesmoke;\r\n`;\r\nconst Legend = styled.legend`\r\n  font-weight: bolder;\r\n`;\r\nconst Label = styled.label`\r\n  font-style: italic;\r\n  color: #064e06;\r\n`;\r\nconst Input = styled.input`\r\n  outline: none;\r\n  margin-bottom: 10px;\r\n  padding: 10px;\r\n  width: 30%;\r\n  `;\r\nconst Button = styled.button`\r\n  width: 100px;\r\n  padding: 5px;\r\n  border: 1px solid black;\r\n  background-color: #daeeda;\r\n`;\r\nconst Success = styled.div`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n  color: #270;\r\n  background-color: #dff2bf;\r\n`;\r\nconst Error = styled.div`\r\n  margin: 10px 0;\r\n  padding: 10px;\r\n  border-radius: 3px 3px 3px 3px;\r\n  color: #d8000c;\r\n  background-color: #ffbaba;\r\n`;\r\n\r\nconst ForgotPass = ({ title }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [password2, setPassword2] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [res, setRes] = useState();\r\n  const { token, userId } = useParams();\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    email && forgotPass(email.toLocaleLowerCase()).then((res) => setRes(res));\r\n    password && resetPass(password, userId, token).then((res) => setRes(res));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Topbar />\r\n      <Form onSubmit={handleSubmit}>\r\n        <Fieldset>\r\n          <Legend>{title}</Legend>\r\n\r\n          {!token && !userId && (\r\n            <>\r\n              <Input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email\"\r\n                value={email}\r\n                required\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n\r\n              <Button\r\n                disabled={\r\n                  email.length > 0 && !email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/)\r\n                }\r\n                onClick={(e) => handleSubmit(e)}\r\n              >\r\n                Submit\r\n              </Button>\r\n            </>\r\n          )}\r\n          {token && userId && (\r\n            <>\r\n              <Input\r\n                type={show ? \"text\" : \"password\"}\r\n                name=\"password\"\r\n                placeholder=\"New Password\"\r\n                value={password}\r\n                minLength=\"4\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n                required\r\n              />\r\n              <Input\r\n                type={show ? \"text\" : \"password\"}\r\n                name=\"password2\"\r\n                value={password2}\r\n                minLength=\"4\"\r\n                placeholder=\"Confirm Password\"\r\n                onChange={(e) => setPassword2(e.target.value)}\r\n                required\r\n              />\r\n              <Label>\r\n                <Input type=\"checkbox\" onChange={() => setShow(!show)} />\r\n                {show ? \"Hide Password\" : \"Show Password\"}\r\n              </Label>\r\n              {password !== password2 && (\r\n                <span style={{ color: \"red\", fontSize: \"10px\" }}>\r\n                  ☹ Passwords doesn't match!\r\n                </span>\r\n              )}\r\n              {(password.length < 4 || password2.length < 4) && (\r\n                <span style={{ color: \"red\", fontSize: \"10px\" }}>\r\n                  ✯ Password must be at least 4 characters long!\r\n                </span>\r\n              )}\r\n\r\n              <Button\r\n                disabled={\r\n                  password !== password2 ||\r\n                  password.length < 4 ||\r\n                  password2.length < 4\r\n                }\r\n              >\r\n                Submit\r\n              </Button>\r\n            </>\r\n          )}\r\n\r\n          {/* If Error Fetched By Server or Client */}\r\n          {res && res.status === 200 && <Success>🌟 {res.data}</Success>}\r\n          {res && res.status !== 200 && <Error>☹ {res.data}</Error>}\r\n          {email.length > 0 && !email.match(/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/) && (\r\n            <Error>☹ Invalid email!</Error>\r\n          )}\r\n        </Fieldset>\r\n      </Form>\r\n\r\n      {/* Useful Links */}\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/register\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ REGISTER HERE\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n      <Link\r\n        to=\"/login\"\r\n        style={{\r\n          margin: \"30%\",\r\n          width: \"50%\",\r\n          fontSize: \"12px\",\r\n          textDecoration: \"none\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        ✿ LOGIN HERE\r\n      </Link>\r\n      <hr style={{ width: \"50%\" }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ForgotPass;\r\n","import {\r\n  BrowserRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Login from \"./pages/Login\";\r\nimport Home from \"./pages/Home\";\r\nimport Admin from \"./pages/Admin\";\r\nimport Register from \"./pages/Register\";\r\nimport ForgotPass from './components/ForgotPass';\r\n\r\nfunction App() {\r\n  const user = useSelector((state) => state.user.currentUser);\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n      <Route\r\n          exact\r\n          path=\"/:username\"\r\n          element={<Home />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/login\"\r\n          element={user ? <Navigate to=\"/\" /> : <Login />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/register\"\r\n          element={user ? <Navigate to=\"/\" /> : <Register />}\r\n        />\r\n        <Route exact path=\"/admin\" element={user? <Admin />:<Login />} />\r\n        <Route exact path=\"/forgot_pass\" element={user? <Home />:<ForgotPass title=\"Forgot Password\" />} />\r\n        <Route exact path=\"/reset_pass/:userId/:token\" element={user? <Home />:<ForgotPass title=\"Reset Password\" />} />\r\n        <Route exact path=\"/:year/:monthId\" element={user? <Home />:<Login />} />\r\n        <Route exact path=\"/\" element={user? <Home />:<Login />} />\r\n        </Routes>\r\n    </Router>\r\n  );\r\n}\r\nexport default App;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport userReducer from \"./userRedux\";\r\nimport entryReducer from \"./entryRedux\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  data: entryReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nexport const store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport let persistor = persistStore(store);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\"\r\nimport {store, persistor} from \"./redux/store\"\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <PersistGate loading={null} persistor={persistor}>\r\n    <App />\r\n    </PersistGate>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}